type AuthPayload {
  accessToken: String!
  refreshToken: String!
}

input SignupInput {
  name: String!
  email: String!
  password: String!
}

input LoginInput {
  email: String!
  password: String!
}

type Mutation {
  login(data: LoginInput!): AuthPayload!
  logout: Boolean!
  refreshToken(token: String!): AuthPayload!
  revokeToken(token: String!): Boolean!
  signup(data: SignupInput!): AuthPayload!
  createUser(data: CreateUserInput!): User!
}

type Query {
  isValidToken(token: String!): Boolean!
  users: [User!]!
}

type User {
  id: String!
  name: String!
  email: String!
  createdAt: String!
}

input CreateUserInput {
  name: String!
  email: String!
  password: String!
}